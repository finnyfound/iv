~version: "2.0"

image_url: //meta[@property="og:image"]/@content

site_name: "RTL 5minutes"
article: //article
header: $article/header

title: $header//h1[has-class("article-heading__title")]
kicker: $header//div[has-class("article-heading__kicker")]
body: $article//div[has-class("article-body")]


metainfo: $header//div[has-class("article-heading__metainfo")]

@clone: $metainfo
@match("\\s+(.*?)\\s+\\|", 1, "i"): $@
author: $@

@clone: $metainfo
@match("auteur:\\s+(.*?)\\s+\\|", 1, "i"): $@
author!: $@[string-length(text()) > 0]

@datetime: $metainfo/text()[2]
published_date

<figure>: $article//div[has-class("media-image")]
<figcaption>: $@//*[has-class("media-image__summary")]
#$fc
#@clone: $fc
#@match("(©.*)\\s*$", 1): $@
#<cite>: $@
#@append_to("./next-sibling::figcaption"): $@
#@replace("/*\\s*©.*\\s*$", ""): $fc/text()

@wrap_inner(<b>): $article//*[has-class("article-body__summary")]

<h1>: $article//*[has-class("article-title")]
<div>: $article//picture


# Slideshow
<iframe>: //div[has-class("gallery")]
$frames

@map( $frames ) {
  $frame: $@
  $z: $frame[string-length(@data-json)>50000]
  @append(<div>): $frame
  $div: $@
  @while( $frame[string-length(@data-json)>0] ) {
    @clone: $frame
    $frame_clone: $@
    @match(".{0,50000}"): $frame_clone/@data-json
    @replace(".{0,50000}(.*)", "$1"): $frame/@data-json

    @set_attr(src, "data:text/html;base64,", @data-json): $frame_clone
    @inline: $frame_clone
    $inlined: $@
    @if( $z ) {
      @append_to($div): $inlined//text()
    }
    
    @if_not( $z ) {
      @append_to($frame): $inlined
    }
  }
  @json_to_xml: $div
  $inlined+: $@
  $inlined+: $frame
  <figure>: $inlined/items/*
  $figure_slideshow
  <img>: $figure_slideshow/url
  @set_attr(src, ./text()): $@
  @html_to_dom: $figure_slideshow/caption
  <figcaption>: $@
  @html_to_dom: $figure_slideshow/copyright
  <cite>: $@
  @append_to("./../figcaption"): $@
  @append_to("./ancestor::iframe"): $figure_slideshow
  @remove: $inlined//allentries
  <slideshow>: $frame
}

@unsupported: $article//a[has-class("btn")]
@unsupported: $article//div[has-class("qualifio_iframe_wrapper")]

$mediaplayer: //div[@class="mediaplayer"]
$script: $mediaplayer//script
$audio: $script[contains(text(), "play_mp3")]/..
$video: $script[not(contains(text(), "play_mp3"))]

# JS video
<figure>: $article//div[has-class("media-video")]
$figure: $@
$video: $figure//rtl-player
@set_attr(src, @hls): $video
<video>: $video
<figcaption>: $figure//div[has-class("media-video__title")]
$figcaption_video
@wrap_inner(<b>): $figcaption_video
@append(<br>): $@
@append_to("./preceding-sibling::figcaption"): $figure//div[has-class("media-video__summary")]

article_media: $article//div[has-class("article-media")]
cover: $article_media//figure[has-class("media-image")]
cover!: $article_media//figure[has-class("media-video")]
@prepend_to($body): $article_media//div[has-class("media-embed")]//iframe
@prepend_to($body): $article_media//div[has-class("media-embed")]//video
@prepend_to($body): $article_media//div[has-class("media-embed__post")]
@prepend_to($body): $article_media//slideshow
@prepend_to($body): $article_media//div[has-class("media-embed")]/script[contains(@src, "bbvms")]
<div>: $@
@unsupported: $@

<related>: $article//*[has-class("article__linkbox")]

@remove: $article//iframe[contains(@src, "googletagmanager.com/ns.html")]


?exists: //section[has-class("gallery-wrapper")]
body: //section[has-class("gallery-wrapper")]//div[has-class("grid-container")]
<div>: $body//slideshow
image_url: $body//figure//img//@src
@append_to($body): //div[has-class("gallery-header")]

#  ___  _                   
# |__ \| |                  
#    ) | |_ _ __ _   _  ___ 
#   / /| __| '__| | | |/ _ \
#  |_| | |_| |  | |_| |  __/
#  (_)  \__|_|   \__,_|\___|

?true
#@replace("^\\s+$", ""): //text()

# ULTIMATE PARSER 9000

$problems: $body
@while( $problems ) {
  $test: $body//*[self::blockquote or self::aside or self::figure or (self::img and not(./ancestor::figure)) or self::iframe or self::slideshow or self::related or self::footer or self::table[not(ancestor::table) and not(descendant::table)] or self::h1 or self::h2 or self::h3 or self::h4 or self::h5]
 
  $problems: $test/self::*[ancestor::anchor or ancestor::blockquote or ancestor::aside or ancestor::footer or ancestor::strong or ancestor::b or ancestor::em or ancestor::i or ancestor::ins or ancestor::u or ancestor::del or ancestor::s or ancestor::strike or ancestor::code or ancestor::kbd or ancestor::samp or ancestor::tt or ancestor::mark or ancestor::sup or ancestor::pic or ancestor::sub or ancestor::a or ancestor::reference or ancestor::h1 or ancestor::h2 or ancestor::h3 or ancestor::h4 or ancestor::h5 or ancestor::h6 or ancestor::p or ancestor::pre or ancestor::hr or ancestor::img or ancestor::br]
 
  @if( $problems ) {
    $parent: $problems/parent::*
    @detach: $parent/node()
    @set_attr("merge", $index): $@
    <remove>: $parent
    @after_el("./parent::*"): $problems
    @combine: $body//self::*[prev-sibling::*/@merge = @merge]
  }
}

?path: /*terms/*.*
?path: /*privacy/*.*

body!!: null