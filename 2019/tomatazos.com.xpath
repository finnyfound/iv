~version: "2.0"

article: //section[@id="view-list"]
article: //article

?path_not: /*videos/*.*
!path_not: /*criticos/*.*

body: $article//div[has-class("list")]//div[has-class("content")]
body: $article//div[@id="content"]

<div>: $body//p[.//img]

@remove: $article//header//img[has-class("author_avatar")]

@inline: $body//iframe[contains(@src, "tomatazos.com/videos")]
$frame
@html_to_dom: $@//script[@id="videoDataJSON"]/text()
$dom
@json_to_xml: $@/text()
<figure>: $@/sources/item
$figure_video
@append(<video>): $figure_video
$video: $@
@set_attr(src, "./../text()"): $video
@after_el("./ancestor::html[1]"): $figure_video
@append_to("./ancestor::html[1]/next-sibling::figure"): $frame//h3
$h3_caption
@remove: $h3_caption/a/span
<figcaption>: $h3_caption
@remove: $frame

header: $article/div[has-class("resized_header")]
title: $header/h2[@itemprop="name headline"]
subtitle: $header/p[@itemprop="description"]
author: $article//header//p[@id="post-info"]//a[@itemprop="url"]/span/text()
author: $header/p[@itemprop="author"]//span[@itemprop="name"]/text()
published_date: $article//header//span[has-class("publish_date")]/time/@data-timestamp
published_date: $header/p[@itemprop="author"]/time/@data-timestamp

@background_to_image: $article//header
cover

<h5>: $body//span[has-class("movie-title")]
@after_el("./ancestor::p"): $body//p//h5

<pic>: //span[has-class("icon_tomatoes")]
$icon_tomatoes

@set_attr(src, "http://i0.wp.com/tomatazos.com/images/icons_tomatoes.png?crop=286px,50px,28px,22px"): $icon_tomatoes[has-class("fresh") or has-class("fresh_smallest") or has-class("fresh_medium") or has-class("fresh_tiny") or has-class("fresh_icon")]

@set_attr(src, "http://i0.wp.com/tomatazos.com/images/icons_tomatoes.png?crop=288px,95px,24px,24px"): $icon_tomatoes[has-class("rotten") or has-class("rotten_medium") or has-class("worse_smallest") or has-class("rotten_smallest") or has-class("rotten_tiny") or has-class("rotten_icon")]

@set_attr(src, "http://i0.wp.com/tomatazos.com/images/icons_tomatoes.png?crop=285px,73px,28px,22px"): $icon_tomatoes[has-class("certified") or has-class("certified_smallest") or has-class("certified_medium") or has-class("certified_tiny") or has-class("certified_icon")]
<pic>: //img[has-class("icon_tomatoes")]

<pic>: //img[starts-with(@src, "/core/img/emoticons/")]

@set_attr(href, "./../@href"): $body//a/img
<div>: $body//a[.//img]
<div>: $body//p[.//video]

@replace("&quot", "\""): //text()

@append_to($body): $article//div[has-class("pagination")]

?path: /*listas/*.*
?path: /*usuarios/*listas/*.*

cover!: $body//*[has-class("contentBox")]/figure
@append_to($body): $article/next-sibling::section[has-class("listLists")]
$lists: $@
@remove: $lists//*[has-class("tagsection")]
<img>: $lists//image
@set_attr(href, "./../@href"): $lists//a/img
<div>: $lists//a[.//img]
$wrapper_info: $lists//div[has-class("wrapperInfo")]
@append_to("./../h2"): $wrapper_info//time/..
@replace("(\\d{4})-.*", "$1"): $wrapper_info//time
<p>: $wrapper_info//*[has-class("original_title")]
@remove: $lists//section[has-class("loader")]

?path: /*videos/*.*
title: $article//header/h2
body: $article//section[has-class("videoInfo")]
author: $article//div[@id="authorName"]//span[has-class("author")]
published_date: $article//p[@id="publishDate"]//time/@data-timestamp
@append(<video>): $body
@set_attr(src, $article//meta[@itemprop="contentUrl"]/@content ): $@

#  ___  _                   
# |__ \| |                  
#    ) | |_ _ __ _   _  ___ 
#   / /| __| '__| | | |/ _ \
#  |_| | |_| |  | |_| |  __/
#  (_)  \__|_|   \__,_|\___|

?true
#@replace("^\\s+$", ""): //text()

# ULTIMATE PARSER 9000

$problems: $body
@while( $problems ) {
  $test: $body//*[self::blockquote or self::aside or self::figure or (self::img and not(./ancestor::figure)) or self::iframe or self::slideshow or self::related or self::footer or self::table[not(ancestor::table) and not(descendant::table)]]
 
  $problems: $test/self::*[ancestor::anchor or ancestor::blockquote[not(has-class("twitter-tweet"))] or ancestor::aside or ancestor::footer or ancestor::strong or ancestor::b or ancestor::em or ancestor::i or ancestor::ins or ancestor::u or ancestor::del or ancestor::s or ancestor::strike or ancestor::code or ancestor::kbd or ancestor::samp or ancestor::tt or ancestor::mark or ancestor::sup or ancestor::pic or ancestor::sub or ancestor::a or ancestor::reference or ancestor::h1 or ancestor::h2 or ancestor::h3 or ancestor::h4 or ancestor::h5 or ancestor::h6 or ancestor::p or ancestor::pre or ancestor::hr or ancestor::img or ancestor::br]
 
  @if( $problems ) {
    $parent: $problems/parent::*
    @detach: $parent/node()
    @set_attr("merge", $index): $@
    <remove>: $parent
    @after_el("./parent::*"): $problems
    @combine: $body//self::*[prev-sibling::*/@merge = @merge]
  }
}

